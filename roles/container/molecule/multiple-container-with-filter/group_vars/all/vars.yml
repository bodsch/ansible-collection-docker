---

container_network:
  - name: test
    subnet: 172.3.27.0/24
    gateway: 172.3.27.2
    iprange: 172.3.27.0/26

container_fail:
  error_at_launch: false

container_pre_tasks:
  - /usr/local/bin/list_all_images.sh

container_post_tasks:
  - /usr/local/bin/remove_untagged_images.sh
  - /usr/local/bin/parse_container_fact.sh

container_filter:
  by: "name"
  names:
    - busybox-2

_images:
  image_1: "busybox:latest"
  image_2: "busybox:latest"
  image_3: "hello-world:latest"
  image_4: "busybox:latest"
  image_5: "busybox:latest"

_container_defaults: &CONTAINER_DEFAULTS
  restart_policy: always
  labels:
    watchdog: "false"
  log_options:
    labels: "service"
    max-size: "1m"
    max-file: "2"

container: "{{
  container_1 |
  union(container_2 | default([])) |
  union(container_3 | default([])) |
  union(container_4 | default([])) |
  union(container_5 | default([])) }}"

container_1:
  - name: busybox-1
    hostname: busybox-1
    image: "{{ _images.image_1 }}"
    volumes:
      - /run/docker.sock:/tmp/docker.sock:ro
      - /dev/foo:/dev/foo:ro
      - /tmp/busybox-1/nginx:/tmp/nginx:ro
      - /tmp/busybox-1/testing3:/var/tmp/testing3:rw|{owner="1001",group="1000"}
      - /tmp/busybox-1/testing4:/var/tmp/testing4|{owner="1001",mode="0700"}
      - /tmp/busybox-1/testing5:/var/tmp/testing5|{owner="1001",mode="0700",ignore=True}
      - /tmp/busybox-1/testing6:/var/tmp/testing6:ro|{owner="1001",group="1000"}
    mounts:
      - source: /tmp/busybox-1/testing1
        target: /var/tmp/testing1
        type: bind
        source_handling:
          create: true
          owner: "1000"
          group: "1000"
          mode: "0750"
      - source: /tmp/busybox-1/testing2
        target: /var/tmp/testing2
        type: bind
        source_handling:
          create: true
          owner: "800"
          group: "800"
          mode: "0700"
      - source: /opt/busybox-1/registry
        target: /opt/data
        type: bind
        source_handling:
          create: true
          owner: "1000"
          group: "1000"
          mode: "0750"
      - source: "{{ container_env_directory }}/registry/config.yml"
        target: /etc/docker/registry/config.yml
        type: bind
        read_only: true
        source_handling:
          create: false

container_2:
  - name: busybox-2
    <<: *CONTAINER_DEFAULTS
    hostname: busybox-2
    image: "{{ _images.image_2 }}"
    mounts:
      - source: /tmp/busybox-2/testing1
        target: /var/tmp/testing1
        type: bind
        source_handling:
          create: true
          owner: "1000"
          group: "1000"
          mode: "0750"
      - source: /tmp/busybox-2/testing2
        target: /var/tmp/testing2
        type: bind
        source_handling:
          create: true
          owner: "800"
          group: "999"
          mode: "0700"
    environments:
      VIRTUAL_HOST: busybox-2.local
      # TEST_WORF: true
      DBA_HOST: database
      DBA_USER: username
    properties:
      publisher.enabled: "true"

container_3:
  - name: hello-world-1
    <<: *CONTAINER_DEFAULTS
    # state: stopped
    hostname: hello-world-1
    image: "{{ _images.image_3 }}"
    properties:
      publisher.maxRecursionDepth: 600
      # user and password for login to the staging serve
      replicator.user: 'replicator'
      replicator.password: 'replicator'
      # replicator.domain: ''
      replicator.tmp_dir: 'var/tmp'
    environments:
      VIRTUAL_HOST: hello-world-1.local

container_4:
  - name: busybox-4
    <<: *CONTAINER_DEFAULTS
    state: absent
    hostname: busybox-4
    image: "{{ _images.image_4 }}"
    environments:
      VIRTUAL_HOST: busybox-4.local

container_5:
  - name: busybox-5
    <<: *CONTAINER_DEFAULTS
    state: present
    hostname: busybox-5
    image: "{{ _images.image_5 }}"
    restart: "false"
    restart_policy: "no"
    environments:
      VIRTUAL_HOST: busybox-5.local

...
